@using System.Security.Claims
@using MyFirstServerSideBlazor.Authentification
@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthenticationStateProvider

<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">Blazor App</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="/">Home(neveikia)</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/Knygos">Knygos</a>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="/" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            @UserName
          </a>
          <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
            <li><a class="dropdown-item" href="/">Action(neveikia)</a></li>
            <li><a class="dropdown-item" href="/">Another action(neveikia)</a></li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item" href="/" @onclick="LogoutAction">Logout</a></li>
          </ul>
        </li>
        
      </ul>
     
    </div>
  </div>
</nav>

<div class="MainBody">
    @Body

    
</div>

<style>
        
    html{
        height: 100%;
    }
    
    .MainBody{
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        justify-items: center;
        height: 100%;
        width: 100%;
        align-content: center;
        background: linear-gradient(18deg, #87e195 0%, #6493e5 100%);
    }
    
    .navbar{
        position:absolute;
    left:0;
    top:0;  
        width: 100%;
         
    }

    body, #app{
        height: 100%;
    }
    
</style>

@code{
    public string UserName { get; set; }
    public string Role { get; set; }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        UserName = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Claims.Where(x => x.Type == ClaimTypes.Name).FirstOrDefault()?.Value ?? "Prisijunkite";
        Role = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Claims.Where(x => x.Type == ClaimTypes.Role).FirstOrDefault()?.Value ?? "Kas tu?";

        StateHasChanged();
    }

    protected async Task LogoutAction()
    {
        ((TokenAuthenticationStateProviderServise)AuthenticationStateProvider).UserLogOut();

    }
}

